

Neenah: { lat: "44.1742", lon: "-88.4686"}


///////////////////////////////////////////////////////////////////////
1st check-in:  Tue 150616

  - Bring your persona and wireframes
  - Have your app deployed to Heroku
  - Have your CSS and HTML on production
  - Have implemented a third party login if applicable
  - Have explored the API to make sure that your project is feasible


    Jorge feedback:
        Required
          Display map via Mapbox
          User can upload profile with locations they've been to
          Display user's locations on the map

        Optional
          Filtering based on city, state and country
          Whoâ€™s been in most places







///////////////////////////////////////////////////////////////////////
Wed 150617

heroku:
  under settings...
  add MAPBOX_TOKEN to Config Variables


schema:
    User
      has many places

    UsersPlaces

    Places
      has many users




$ rails g migration CreateUsers nickname email provider token uid image_url

$ rails g controller Dashboard



















///////////////////////////////////////////////////////////////////////
150621 Sun
Consume Eventful API



build:  app/services/eventful_service.rb

in rails c:
  service = EventfulService.new.events

  service = EventfulService.new.events.body

  JSON.parse(EventfulService.new.events)
    parses the JSON into a hash, so we can access the keys and values programmatically


  events[:events][:event].first



rails g controller events





OPENSTRUCT:
  a class that gets built on the fly...
  allows us to get access to all the attributes without having to explicitly create them






events = EventfulService.new.get_events(39.750081,-104.999703")
events = EventfulService.new.get_events(lat=39.7339901219319&lon=-104.98003005981445)

lat=39.7339901219319&lon=-104.98003005981445


events = EventfulService.new
location = { lat: "44.1742", lon: "-88.4686" }
response = events.get_events(location)
response.first




open SimpleCov:
  $ open coverage/index.html






/////////////////////////////
DONE:

- remove Turing logo and github login from header
- name & domain
    mappo.events
    megahot.click
    mappy.click
- add logo
- update map
- add 'find me' button
- build-out simple list view
- pass lat/long to API call
- figure out AJAX


TO-DO:
- TESTS TESTS TESTS
- errors

- carto.css
